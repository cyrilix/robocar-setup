apiVersion: v1
kind: ConfigMap
metadata:
  name: robocar
data:
  # Broker configuration
  MQTT_BROKER_HOST: nats-server.nats.svc.cluster.local
  #MQTT_BROKER: "tcp://mqtt.robocar.svc.cluster.local:1883"
  MQTT_BROKER: "tcp://nats-server.nats.svc.cluster.local:1883"

  # Camera
  MQTT_TOPIC_CAMERA: car/satanas/part/camera/color
  MQTT_TOPIC_CAMERA_OAK_COLOR: car/satanas/part/camera/color

  # Objects detection
  MQTT_TOPIC_OBJECTS: car/satanas/part/objects

  # Radio command
  MQTT_TOPIC_RC_THROTTLE: car/satanas/part/rc/throttle
  MQTT_TOPIC_RC_STEERING: car/satanas/part/rc/steering
  MQTT_TOPIC_RC_SWITCH_RECORD: car/satanas/part/rc/switch_record
  MQTT_TOPIC_RC_DRIVE_MODE: car/satanas/part/rc/drive_mode


  MQTT_TOPIC_TF_STEERING: car/satanas/part/tflite/steering

  # Values to apply
  MQTT_TOPIC_THROTTLE: car/satanas/part/throttle
  MQTT_TOPIC_STEERING: car/satanas/part/steering

  # Road detection
  MQTT_TOPIC_ROAD: car/satanas/part/road

  # Records topic
  MQTT_TOPIC_RECORDS: car/satanas/part/records

  # Feedbacks
  MQTT_TOPIC_THROTTLE_FEEDBACK: car/satanas/part/feedback/throttle

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: robocar-throttle
data:
  ############
  # Throttle #
  ############
  THROTTLE_MIN: "0.2"
  THROTTLE_MAX: "0.3"


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: robocar-steering-pwm
data:
  ################
  # STEERING PWM #
  ################
  STEERING_LEFT_PWM: "1000"
  STEERING_RIGHT_PWM: "1985"
  STEERING_CENTER_PWM: "1492"

  ############################
  # STEERING PWM - SECOND RC #
  ############################
  STEERING_SECONDARY_LEFT_PWM: "1119"
  STEERING_SECONDARY_RIGHT_PWM: "2141"
  STEERING_SECONDARY_CENTER_PWM: "1641"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: robocar-throttle-pwm
data:
  ################
  # THROTTLE PWM #
  ################
  THROTTLE_MIN_PWM: "994"
  THROTTLE_MAX_PWM: "1979"
  THROTTLE_ZERO_PWM: "1484"

  ###########################
  # THROTTLE PWM - SECOND RC #
  ############################
  THROTTLE_SECONDARY_MIN_PWM: "994"
  THROTTLE_SECONDARY_MAX_PWM: "1975"
  THROTTLE_SECONDARY_ZERO_PWM: "1506"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: robocar-camera
data:
  ##########
  # Camera #
  ##########
  2CAMERA_WIDTH: "160"
  2CAMERA_HEIGHT: "128"

  CAMERA_WIDTH: "160"
  CAMERA_HEIGHT: "120"

  MQTT_CAMERA_PUB_FREQUENCY: "30"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: robocar-models
data:
  # model to use for steering
  MODEL_STEERING: model_categorical_160x120h0_edgetpu.tflite

  #MODEL_STEERING: model_linear_160x120h40_edgetpu.tflite


  #MODEL_STEERING: model_linear_160x120h20_edgetpu.tflite
  #MODEL_STEERING: model_categorical_160x120h20_edgetpu.tflite


  #MODEL_STEERING: model_linear_160x120h50_edgetpu.tflite

  MODEL_IMAGE_WIDTH: "160"
  MODEL_IMAGE_HEIGHT: "120"
  HORIZON: "20"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: robocar-road
data:
  HORIZON: "20"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: steering
data:
  grid.json: |
    {
      "steering_steps": [ -1, -0.66, -0.33, 0, 0.33, 0.66, 1],
      "distance_steps": [ 0, 0.3, 0.4, 0.5, 0.8, 1],
      "data": [
        [ 0, 0, 0, 0, 0, 0],
        [ 0, 0, 0, 0, 0, 0],
        [ 0, 0, 0.25, -0.25, 0, 0],
        [ 0, 0.25, 0.5, -0.5, -0.25, 0],
        [ 0.25, 0.5, 1, -1, -0.5, -0.25]
      ]
    }

  "omf.json": | 
    {
      "steering_steps":[-1, -0.66, -0.33, 0, 0.33, 0.66, 1],
      "distance_steps": [0, 0.2, 0.4, 0.6, 0.8, 1],
      "data": [
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0.25, 0, 0, -0.25, 0],
        [0.5, 0.25, 0, 0, -0.5, -0.25]
      ]
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: android
data:
  thresholds.json: |
    {
      "threshold_steps": [ 0.07, 0.08, 0.09, 0.1, 0.125, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0 ],
      "min_valid": 500,
      "data": [ 8700, 4800, 3500, 2550, 1850, 1387, 992, 840, 750, 700, 655, 620, 590, 570, 553, 549, 548 ]
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: throttle
data:
  brake.json: |
    {
      "delta_steps": [ 0.05, 0.3, 0.5 ],
      "data": [ -0.1, -0.5, -1.0 ]
    }
