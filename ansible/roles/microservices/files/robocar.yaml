---
apiVersion: v1
kind: Pod
metadata:
  name: arduino
spec:
  containers:
    - name: arduino
      image: docker.io/cyrilix/robocar-arduino:v0.2.0
      args:
      - "-device=/dev/ttyAMA1"
      - "-baud=115200"
      - "-mqtt-retain=false"
      - "-debug=false"
      volumeMounts:
        - mountPath: "/dev/ttyAMA1"
          name: serial
      securityContext:
        runAsUser: 1234
        runAsGroup: 20 # Set 20/dialout group to access to serial device
    #  network_mode: host
      env:
        - name: MQTT_BROKER
          valueFrom:
            configMapKeyRef:
              key: MQTT_BROKER
              name: robocar
        - name: MQTT_USERNAME
          valueFrom:
            configMapKeyRef:
              key: MQTT_USERNAME
              name: robocar
        - name: MQTT_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: MQTT_PASSWORD
              name: robocar
        - name: MQTT_CLIENT_ID
          value: rc-arduino
        - name: MQTT_TOPIC_THROTTLE
          valueFrom:
            configMapKeyRef:
              key: MQTT_TOPIC_RC_THROTTLE
              name: robocar
        - name: MQTT_TOPIC_STEERING
          valueFrom:
            configMapKeyRef:
              key: MQTT_TOPIC_RC_STEERING
              name: robocar
        - name: MQTT_TOPIC_DRIVE_MODE
          valueFrom:
            configMapKeyRef:
              key: MQTT_TOPIC_RC_DRIVE_MODE
              name: robocar
        - name: MQTT_TOPIC_SWITCH_RECORD
          valueFrom:
            configMapKeyRef:
              key: MQTT_TOPIC_RC_SWITCH_RECORD
              name: robocar
        - name: MQTT_QOS
          value: "0"
        - name: TZ
          value: "Europe/Paris"
  volumes:
    - name: serial
      hostPath:
        path: /dev/ttyAMA1
        type: CharDevice

---
apiVersion: v1
kind: Pod
metadata:
  name: led
spec:
  containers:
    - name: led
      image: docker.io/cyrilix/robocar-led:v0.2.0
      args:
      - "-mqtt-retain=false"
      volumeMounts:
        - name: gpiomem
          mountPath: "/dev/gpiomem"
      securityContext:
        runAsUser: 1234
        runAsGroup: 997 # Set 997/gpio group to access to serial device

      #network_mode: host
      env:
        - name: MQTT_BROKER
          valueFrom:
            configMapKeyRef:
              key: MQTT_BROKER
              name: robocar
        - name: MQTT_USERNAME
          valueFrom:
            configMapKeyRef:
              key: MQTT_USERNAME
              name: robocar
        - name: MQTT_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: MQTT_PASSWORD
              name: robocar
        - name: MQTT_CLIENT_ID
          value: rc-led
        - name: MQTT_TOPIC_DRIVE_MODE
          valueFrom:
            configMapKeyRef:
              key: MQTT_TOPIC_RC_DRIVE_MODE
              name: robocar
        - name: MQTT_TOPIC_RECORD
          valueFrom:
            configMapKeyRef:
              key: MQTT_TOPIC_RC_SWITCH_RECORD
              name: robocar
        - name: MQTT_QOS
          value: "0"
        - name: TZ
          value: "Europe/Paris"
  volumes:
    - name: gpiomem
      hostPath:
        path: /dev/gpiomem
        type: CharDevice
---
apiVersion: v1
kind: Pod
metadata:
  name: tflite-steering
spec:
  containers:
    - name: tflite-steering
      image: docker.io/cyrilix/robocar-tflite-steering:v0.1.0
      args:
      - "--tf-model-path=/model/model.tflite"
      securityContext:
        runAsUser: 1234
        runAsGroup: 1234
  #network_mode: host
      volumeMounts:
      - name: models
        mountPath: /model
      env:
        - name: MQTT_BROKER
          valueFrom:
            configMapKeyRef:
              key: MQTT_BROKER
              name: robocar
        - name: MQTT_USERNAME
          valueFrom:
            configMapKeyRef:
              key: MQTT_USERNAME
              name: robocar
        - name: MQTT_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: MQTT_PASSWORD
              name: robocar
        - name: MQTT_CLIENT_ID
          value: rc-tflite-steering
        - name: MQTT_TOPIC_CAMERA
          valueFrom:
            configMapKeyRef:
              key: MQTT_TOPIC_CAMERA
              name: robocar
        - name: MQTT_TOPIC_STEERING
          valueFrom:
            configMapKeyRef:
              key: MQTT_TOPIC_TF_STEERING
              name: robocar
        - name: MQTT_QOS
          value: "0"
        - name: TZ
          value: "Europe/Paris"
  volumes:
    - name: models
      hostPath:
        path: /home/pi/models/steering
        type: DirectoryOrCreate

---
apiVersion: v1
kind: Pod
metadata:
  name: throttle
spec:
  containers:
    - name: throttle
      image: docker.io/cyrilix/robocar-throttle:v0.2.0
      args:
      - "-mqtt-retain=false"
      securityContext:
        runAsUser: 1234
        runAsGroup: 1234
      #network_mode: host
      env:
        - name: MQTT_BROKER
          valueFrom:
            configMapKeyRef:
              key: MQTT_BROKER
              name: robocar
        - name: MQTT_USERNAME
          valueFrom:
            configMapKeyRef:
              key: MQTT_USERNAME
              name: robocar
        - name: MQTT_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: MQTT_PASSWORD
              name: robocar
        - name: MQTT_CLIENT_ID
          value: rc-throttle
        - name: MQTT_TOPIC_THROTTLE
          valueFrom:
            configMapKeyRef:
              key: MQTT_TOPIC_THROTTLE
              name: robocar
        - name: MQTT_TOPIC_RC_THROTTLE
          valueFrom:
            configMapKeyRef:
              key: MQTT_TOPIC_RC_THROTTLE
              name: robocar
        - name: MQTT_TOPIC_DRIVE_MODE
          valueFrom:
            configMapKeyRef:
              key: MQTT_TOPIC_RC_DRIVE_MODE
              name: robocar
        - name: THROTTLE_MIN
          valueFrom:
            configMapKeyRef:
              key: THROTTLE_MIN
              name: robocar
        - name: THROTTLE_MAX
          valueFrom:
            configMapKeyRef:
              key: THROTTLE_MAX
              name: robocar
        - name: MQTT_QOS
          value: "0"
        - name: TZ
          value: "Europe/Paris"

#---
#apiVersion: v1
#kind: Pod
#metadata:
#  name: road
#spec:
#  containers:
#    - name: road
#      image: docker.io/cyrilix/robocar-road:0.0.1
#      args:
#      - "-horizon=20"
#      - "-mqtt-retain=false"
#      securityContext:
#        runAsUser: 1234
#        runAsGroup: 1234
#      #network_mode: host
#      env:
#        - name: MQTT_BROKER
#          valueFrom:
#            configMapKeyRef:
#              key: MQTT_BROKER
#              name: robocar
#        - name: MQTT_USERNAME
#          valueFrom:
#            configMapKeyRef:
#              key: MQTT_USERNAME
#              name: robocar
#        - name: MQTT_PASSWORD
#          valueFrom:
#            configMapKeyRef:
#              key: MQTT_PASSWORD
#              name: robocar
#        - name: MQTT_CLIENT_ID
#          value: rc-road
#        - name: MQTT_TOPIC_CAMERA
#          valueFrom:
#            configMapKeyRef:
#              key: MQTT_TOPIC_CAMERA
#              name: robocar
#        - name: MQTT_TOPIC_ROAD
#          valueFrom:
#            configMapKeyRef:
#              key: MQTT_TOPIC_ROAD
#              name: robocar
#        - name: MQTT_QOS
#          value: "0"
#        - name: TZ
#          value: "Europe/Paris"

---
apiVersion: v1
kind: Pod
metadata:
  name: record
spec:
  containers:
    - name: record
      image: docker.io/cyrilix/robocar-record:v0.2.0
      args:
      - "-mqtt-retain=true"
      securityContext:
        runAsUser: 1234
        runAsGroup: 1234
      #network_mode: host
      env:
        - name: MQTT_BROKER
          valueFrom:
            configMapKeyRef:
              key: MQTT_BROKER
              name: robocar
        - name: MQTT_USERNAME
          valueFrom:
            configMapKeyRef:
              key: MQTT_USERNAME
              name: robocar
        - name: MQTT_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: MQTT_PASSWORD
              name: robocar
        - name: MQTT_CLIENT_ID
          value: rc-record
        - name: MQTT_TOPIC_CAMERA
          valueFrom:
            configMapKeyRef:
              key: MQTT_TOPIC_CAMERA
              name: robocar
        - name: MQTT_TOPIC_STEERING
          valueFrom:
            configMapKeyRef:
              key: MQTT_TOPIC_RC_STEERING
              name: robocar
        - name: MQTT_TOPIC_SWITCH_RECORD
          valueFrom:
            configMapKeyRef:
              key: MQTT_TOPIC_RC_SWITCH_RECORD
              name: robocar
        - name: MQTT_TOPIC_RECORDS
          valueFrom:
            configMapKeyRef:
              key: MQTT_TOPIC_RECORDS
              name: robocar
        - name: MQTT_QOS
          value: "0"
        - name: TZ
          value: "Europe/Paris"
